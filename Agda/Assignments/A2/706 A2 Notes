Assignment 2

Do all holes (in prefilled ones) marked as exercises in Relations.agda and Isomorphisms.agda.

Bonus: *-mono-<= in Relations.agda.


A2 is out - see Avenue. Basically: all the parts marked 'exercises' in filled/Relations.agda and filled/Isomorphisms.agda.  Due next Wednesday (Oct. 6th) in the evening.

Extend to Friday morning, ask questions, help eachother, etc

The description (also on Avenue) now reads:


Do the following exercises

in Relations.agda	
	LTTrans (1 pt, reccomended), 
	Trichotomy (2 pts, practice), 
	LEtoLTS (1 pt, not in PLFA relations?), 
	LEStoLT (1 pt, not in PLFA?), 
	LTtoSLE (1 pt, not in PLFA?), 
	LTStoLE (1 pt, not in PLFA?), 
	OPOE (2 pts, stretch)
  Bonus: *-mono-<= in Relations.agda (pts? 2?, stretch).
	

Isomorphisms.agda. (entirety of these problems have no PLFA exercise associated with them)
I will give you 'canonical' solutions to inc, tob, dblb and fromb, [by email, since one person has had an extension]
		
	IncCanOne (2 pts), 
  OneInc (1 pt), 
  CanToB (1 pt), 
	OneDblX0 (1 pt), 
  OneToFrom (3 pts), 
  CanToFrom (1 pt), 
  OneUnique (2 pts), 
  CanUnique (1 pt, no PLFA), 
 Rewrap (1 pt, no PLFA), 
  IsoNCanR (2 pts, no PLFA))



17 questions +1 bonus in total, 24 + 2 bonus points total
So far have 9 questions or 12 points for sure, conservatively if gives mercy and give 1/4 rest to me for structure +2.25 questions or +3.5 points
gives maybe 11/17 = 64.7% or 15.5/24= 64.6%


Tips from Dr. Carette:
Assignments I just finished preparing the solutions for A2. So some hints:
- it's much easier to split things up into smaller files and import old things than to copy-paste. [I made some mistakes because I had different versions of the function in different files, and that caused much pain.]  I already did that with A1.
- the points associated to each function are a strong indication of their difficulty. OneToFrom really is more difficult (but not so bad if you do an equational proof and you have all your lemmas handy for re-use)
- using copatterns for IsoNCanR leads to a much simpler-looking proof.  As the things you need to fill are functions, you can then actually add that extra variable to the lhs and pattern-match on it as well. 
- after you split, the proof of OneDblbX0 should all be 'refl'. If it's not, you're using a bad 'dblb' implementation.


C-u C-u C-c C-. that shows the have if you input the expression of a certain type
Watching the lectures for naturals really helped! Idk what I did but I got the first one

TODO: Format into assignment, get feedback from last assignment, keep watching lecture

