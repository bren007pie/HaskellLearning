706 Assignment Notes

***Compiled List of Tips***

Assignment Handin (from Assignment 1)
-- Upload as AGDA code
-- Should have 0 type errors. Must compile. Will be severe if it doesn't compile
-- Should know is right because Agda is satisfied.
-- If give code that is wrong put it in a comment and say it's wrong
-- May run into problems of file encoding so if technology is the issue then no wories
-- 8 small assignments during the term of the course.
-- comment the code to say what you're doing, explain WHY you're doing it that way
-- comment basic idea of the algorithm. Add extra tests to show you know what you're doing
-- Don't forget to spell check
-- Extra marks will be given for good documentation. Marks will be deducted for lack of documentation.
-- You may hand in .lagda or .agda files, your choice. 
-- No need to be effecient but explain why you choose to do it that way


Feedback from Assignment 1
Your editor seems to make long lines out of stuff... can you reconfigure it so that it doesn't?
Your comments are probably too verbose. The content of them (like for `inc`) is good, but you could have said the same thing with way fewer words.

Also, when commenting, don't bother with saying "base case" and "inductive case". Do say what you induct on though.  Example of good comments:
dbl : ℕ → ℕ 
dbl zero = zero  -- 2*0 = 0
dbl (suc m) = suc (suc (dbl m))  -- 2*(m+1) = (2*m) + 2

If you're commenting stuff that's already in the file for your own understanding (like 7+7=14 in binary), great, but no need to hand that in...

I prefer to have the equational proofs aligned differently (justifications on the right)

when proofs are trivial (like 'refl') such as in the first case of AddDistMult, go ahead and use that!
The weird error in *-comm is that you had 'n⟩' instead of 'n ⟩' (see that space?) and so it was taking the 'n⟩' as a single token and was missing the closing '⟩'.



Based on Lectures (Assignment 3):
- Follow propper punning, instance of a set variable is in lowercase and the set variable is in uppercase. E.g. (A : set) (a : A).
- For nice readability make sure to line up equals signs, i.e. =, the way Dr. Carette does


Feedback from Carette on Assignment 2
- I'm really looking for "proof strategy" comments, usually at the top of the function/proof, rather than line-by-line commentary on the low-level details of what's going on.
- 2 of the 4 proofs about inequalities didn't need induction if you used the previous lemmas (and listened to the hint).
- 7 / 24, for what was completed.


- Make sure to have list of done and not done questions as the header of the file along with name and info for Carette

-- TODO remove HIDs for handin

- Use dot notation to make subdirectories for dependancy files to make it cleaner to hand in
- Keep file (subject) name the same but call module name Dependencies.Subject and put in Dependencies folder


A3 Feedback: 
More comments...
+2 for bonus, -2 for holes

- TIP: comment high-level comments as you go

- Don't change names of files so Carette doesn't have to go through hassel of getting it to work

***Agda Hand-in File Header***
{-
Name
macid
Date

Question Fully Completed
Questions Partially Completed

-}
-- TODO remove HIDs


